# Software Package Configuration
# ==============================
# Enhanced setup for Full-Stack Development + CTF/Security Research

packages:
  # Development Tools
  docker:
    name: "Docker Engine"
    install_method: "script"
    url: "https://get.docker.com"
    verify_command: "docker --version"
    post_install:
      - "sudo usermod -aG docker $USER"
      - "sudo systemctl enable docker"
      - "sudo systemctl start docker"

  docker-compose:
    name: "Docker Compose"
    install_method: "binary"
    url: "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64"
    install_to: "/usr/local/bin/docker-compose"
    verify_command: "docker-compose --version"

  lazydocker:
    name: "LazyDocker"
    install_method: "binary"
    url: "https://github.com/jesseduffield/lazydocker/releases/download/v0.24.1/lazydocker_0.24.1_Linux_x86_64.tar.gz"
    extract_to: "/tmp/lazydocker"
    binary_name: "lazydocker"
    install_to: "/usr/local/bin/"
    verify_command: "lazydocker --version"

  lazygit:
    name: "LazyGit"
    install_method: "binary"
    url: "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_0.40.2_Linux_x86_64.tar.gz"
    extract_to: "/tmp/lazygit"
    binary_name: "lazygit"
    install_to: "/usr/local/bin/"
    verify_command: "lazygit --version"

  ghostty:
    name: "Ghostty Terminal"
    install_method: "snap"
    package: "ghostty"
    verify_command: "ghostty --version"

  vscode:
    name: "Visual Studio Code"
    install_method: "apt"
    repository: "https://packages.microsoft.com/repos/code"
    key: "https://packages.microsoft.com/keys/microsoft.asc"
    package: "code"
    verify_command: "code --version"

  # === FULL-STACK DEVELOPMENT TOOLS ===

  # API Development & Testing
  postman:
    name: "Postman API Platform"
    install_method: "snap"
    package: "postman"
    verify_command: "snap list postman"

  insomnia:
    name: "Insomnia REST Client"
    install_method: "snap"
    package: "insomnia"
    verify_command: "snap list insomnia"

  # Database Tools
  dbeaver:
    name: "DBeaver Database Tool"
    install_method: "snap"
    package: "dbeaver-ce"
    verify_command: "snap list dbeaver-ce"

  mysql-client:
    name: "MySQL Client"
    install_method: "apt"
    package: "mysql-client"
    verify_command: "mysql --version --help"

  postgresql-client:
    name: "PostgreSQL Client"
    install_method: "apt"
    package: "postgresql-client"
    verify_command: "psql --version"

  redis-tools:
    name: "Redis Tools"
    install_method: "apt"
    package: "redis-tools"
    verify_command: "redis-cli --version"

  # Cloud Tools
  aws-cli:
    name: "AWS CLI"
    install_method: "custom"
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
    verify_command: "aws --version"

  terraform:
    name: "Terraform"
    install_method: "binary"
    url: "https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip"
    extract_to: "/tmp/terraform"
    binary_name: "terraform"
    install_to: "/usr/local/bin/"
    verify_command: "terraform --version"

  kubectl:
    name: "Kubernetes CLI"
    install_method: "binary"
    url: "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
    install_to: "/usr/local/bin/kubectl"
    verify_command: "kubectl version --client"

  # === SECURITY & CTF TOOLS ===

  # Network Analysis
  wireshark:
    name: "Wireshark Network Analyzer"
    install_method: "apt"
    package: "wireshark"
    verify_command: "wireshark --version"
    post_install:
      - "sudo usermod -aG wireshark $USER"

  nmap:
    name: "Nmap Network Scanner"
    install_method: "apt"
    package: "nmap"
    verify_command: "nmap --version"

  masscan:
    name: "Masscan Port Scanner"
    install_method: "apt"
    package: "masscan"
    verify_command: "command -v masscan"

  # Web Security
  burpsuite:
    name: "Burp Suite Community"
    install_method: "custom"
    verify_command: "command -v burpsuite"

  gobuster:
    name: "Gobuster Directory Buster"
    install_method: "apt"
    package: "gobuster"
    verify_command: "gobuster version"

  dirb:
    name: "DIRB Web Content Scanner"
    install_method: "apt"
    package: "dirb"
    verify_command: "command -v dirb"

  # Reverse Engineering
  ghidra:
    name: "Ghidra Reverse Engineering"
    install_method: "binary"
    url: "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_11.1.2_build/ghidra_11.1.2_PUBLIC_20240709.zip"
    extract_to: "/opt/ghidra"
    verify_command: "command -v ghidra || test -f /opt/ghidra/ghidraRun"

  gdb:
    name: "GNU Debugger"
    install_method: "apt"
    package: "gdb"
    verify_command: "gdb --version"

  radare2:
    name: "Radare2 Reverse Engineering"
    install_method: "apt"
    package: "radare2"
    verify_command: "r2 -version"

  # Crypto & Forensics
  hashcat:
    name: "Hashcat Password Cracker"
    install_method: "apt"
    package: "hashcat"
    verify_command: "hashcat --version"

  john:
    name: "John the Ripper"
    install_method: "apt"
    package: "john"
    verify_command: "command -v john"

  binwalk:
    name: "Binwalk Firmware Analysis"
    install_method: "apt"
    package: "binwalk"
    verify_command: "command -v binwalk"

  steghide:
    name: "Steghide Steganography"
    install_method: "apt"
    package: "steghide"
    verify_command: "steghide --version"

  # Python Security Tools
  python3-pip:
    name: "Python 3 Pip"
    install_method: "apt"
    package: "python3-pip"
    verify_command: "pip3 --version"

  # === MULTIMEDIA & PRODUCTIVITY ===

  firefox:
    name: "Firefox Browser"
    install_method: "snap"
    package: "firefox"
    verify_command: "firefox --version"

  # === SYSTEM TOOLS ===

  neovim:
    name: "Neovim"
    install_method: "appimage"
    url: "https://github.com/neovim/neovim/releases/latest/download/nvim.appimage"
    install_to: "/usr/local/bin/nvim"
    verify_command: "nvim --version"

  zsh:
    name: "Zsh Shell"
    install_method: "apt"
    package: "zsh"
    verify_command: "zsh --version"
    post_install:
      - "chsh -s $(which zsh)"

  stow:
    name: "GNU Stow"
    install_method: "apt"
    package: "stow"
    verify_command: "stow --version"

  git:
    name: "Git"
    install_method: "apt"
    package: "git"
    verify_command: "git --version"

  curl:
    name: "cURL"
    install_method: "apt"
    package: "curl"
    verify_command: "curl --version"

  wget:
    name: "Wget"
    install_method: "apt"
    package: "wget"
    verify_command: "wget --version"

  jq:
    name: "jq JSON Processor"
    install_method: "apt"
    package: "jq"
    verify_command: "jq --version"

  yq:
    name: "yq YAML Processor"
    install_method: "binary"
    url: "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64"
    install_to: "/usr/local/bin/yq"
    verify_command: "yq --version"

  htop:
    name: "htop Process Monitor"
    install_method: "apt"
    package: "htop"
    verify_command: "htop --version"

  tree:
    name: "Tree Directory Listing"
    install_method: "apt"
    package: "tree"
    verify_command: "tree --version"

  unzip:
    name: "Unzip Archive Tool"
    install_method: "apt"
    package: "unzip"
    verify_command: "unzip -v"

  # Modern CLI Tools
  lsd:
    name: "LSDeluxe (modern ls)"
    install_method: "apt"
    package: "lsd"
    verify_command: "lsd --version"

  ripgrep:
    name: "ripgrep (modern grep)"
    install_method: "apt"
    package: "ripgrep"
    verify_command: "rg --version"

  fd:
    name: "fd (modern find)"
    install_method: "apt"
    package: "fd-find"
    verify_command: "fdfind --version"

  bat:
    name: "bat (modern cat)"
    install_method: "apt"
    package: "bat"
    verify_command: "batcat --version"

  fzf:
    name: "fzf (fuzzy finder)"
    install_method: "apt"
    package: "fzf"
    verify_command: "fzf --version"

  # Development Dependencies
  nodejs:
    name: "Node.js"
    install_method: "script"
    url: "https://deb.nodesource.com/setup_lts.x"
    package: "nodejs"
    verify_command: "node --version"

  golang:
    name: "Go Programming Language"
    install_method: "binary"
    url: "https://go.dev/dl/go1.21.5.linux-amd64.tar.gz"
    extract_to: "/usr/local/"
    verify_command: "GOROOT=/usr/lib/go-1.23 /usr/lib/go-1.23/bin/go version || go version"
    post_install:
      - "export PATH=$PATH:/usr/local/go/bin"

  rust:
    name: "Rust Programming Language"
    install_method: "script"
    url: "https://sh.rustup.rs"
    script_args: "-y"
    verify_command: "rustc --version"

  rbenv:
    name: "Ruby Version Manager (rbenv)"
    install_method: "custom"
    verify_command: "rbenv --version"
    post_install:
      - "echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.zshrc"
      - "echo 'eval \"$(rbenv init -)\"' >> ~/.zshrc"

  tmux:
    name: "tmux"
    install_method: "apt"
    package: "tmux"
    verify_command: "tmux -V"

  # Clipboard tools
  xclip:
    name: "xclip"
    install_method: "apt"
    package: "xclip"
    verify_command: "xclip -version"

  # Build tools
  build-essential:
    name: "Build Essential"
    install_method: "apt"
    package: "build-essential"
    verify_command: "gcc --version"

  cmake:
    name: "CMake Build System"
    install_method: "apt"
    package: "cmake"
    verify_command: "cmake --version"

# Python packages for CTF/Security
python_packages:
  - "pwntools"           # CTF exploitation library
  - "requests"           # HTTP library
  - "beautifulsoup4"     # Web scraping
  - "scapy"              # Packet manipulation
  - "cryptography"       # Crypto library
  - "pycrypto"           # Crypto functions
  - "pillow"             # Image processing
  - "numpy"              # Numerical computing
  - "sqlparse"           # SQL parsing
  - "paramiko"           # SSH client
  - "impacket"           # Network protocols
  - "volatility3"        # Memory forensics

# Oh My Zsh plugins to install
zsh_plugins:
  - "zsh-autosuggestions"
  - "zsh-syntax-highlighting"
  - "powerlevel10k"

# Optional manual installations
optional_tools:
  - "VirtualBox - sudo apt install virtualbox"
  - "OWASP ZAP - https://www.zaproxy.org/download/"
  - "JetBrains IDEs - https://www.jetbrains.com/"
  - "Metasploit Framework - via Kali Linux or manual install"
