# Unified Package Configuration
# ============================
# Single source of truth for all packages with platform-specific overrides

# Package definitions with platform-specific installation methods
packages:
  # === CORE DEVELOPMENT ===
  docker:
    name: "Docker"
    description: "Container platform"
    category: "development"
    platforms:
      linux:
        method: "script"
        url: "https://get.docker.com"
        post_install:
          - "sudo usermod -aG docker $USER"
          - "sudo systemctl enable docker"
      macos:
        method: "cask"
        package: "docker"
        post_install:
          - "open -a Docker"
    verify: "docker --version"

  vscode:
    name: "Visual Studio Code"
    description: "Code editor"
    category: "development"
    platforms:
      linux:
        method: "apt"
        repository: "https://packages.microsoft.com/repos/code"
        key: "https://packages.microsoft.com/keys/microsoft.asc"
        package: "code"
      macos:
        method: "cask"
        package: "visual-studio-code"
    verify: "code --version"

  ghostty:
    name: "Ghostty Terminal"
    description: "GPU-accelerated terminal"
    category: "terminal"
    platforms:
      linux:
        method: "snap"
        package: "ghostty"
      macos:
        method: "cask"
        package: "ghostty"
    verify: "ghostty --version"

  # === MODERN CLI TOOLS ===
  ripgrep:
    name: "ripgrep"
    description: "Fast text search"
    category: "cli"
    platforms:
      linux:
        method: "apt"
        package: "ripgrep"
      macos:
        method: "brew"
        package: "ripgrep"
    verify: "rg --version"

  bat:
    name: "bat"
    description: "Better cat with syntax highlighting"
    category: "cli"
    platforms:
      linux:
        method: "apt"
        package: "bat"
        binary_name: "batcat"
      macos:
        method: "brew"
        package: "bat"
        binary_name: "bat"
    verify: "{{binary_name}} --version"

  fd:
    name: "fd"
    description: "Simple and fast find alternative"
    category: "cli"
    platforms:
      linux:
        method: "apt"
        package: "fd-find"
        binary_name: "fdfind"
      macos:
        method: "brew"
        package: "fd"
        binary_name: "fd"
    verify: "{{binary_name}} --version"

  fzf:
    name: "fzf"
    description: "Fuzzy finder"
    category: "cli"
    platforms:
      linux:
        method: "apt"
        package: "fzf"
      macos:
        method: "brew"
        package: "fzf"
    verify: "fzf --version"

  # === SECURITY TOOLS ===
  nmap:
    name: "Nmap"
    description: "Network scanner"
    category: "security"
    platforms:
      linux:
        method: "apt"
        package: "nmap"
      macos:
        method: "brew"
        package: "nmap"
    verify: "nmap --version"

  wireshark:
    name: "Wireshark"
    description: "Network analyzer"
    category: "security"
    platforms:
      linux:
        method: "apt"
        package: "wireshark"
        post_install:
          - "sudo usermod -aG wireshark $USER"
      macos:
        method: "cask"
        package: "wireshark"
    verify: "wireshark --version"

  # === PROGRAMMING LANGUAGES ===
  nodejs:
    name: "Node.js"
    description: "JavaScript runtime"
    category: "language"
    platforms:
      linux:
        method: "script"
        url: "https://deb.nodesource.com/setup_lts.x"
        package: "nodejs"
      macos:
        method: "brew"
        package: "node"
    verify: "node --version"

  golang:
    name: "Go"
    description: "Go programming language"
    category: "language"
    platforms:
      linux:
        method: "binary"
        url: "https://go.dev/dl/go1.21.5.linux-amd64.tar.gz"
        extract_to: "/usr/local/"
      macos:
        method: "brew"
        package: "go"
    verify: "go version"

  rust:
    name: "Rust"
    description: "Rust programming language"
    category: "language"
    platforms:
      linux:
        method: "script"
        url: "https://sh.rustup.rs"
        args: "-y"
      macos:
        method: "brew"
        package: "rust"
    verify: "rustc --version"

# Shared configurations
shared:
  python_packages:
    - "pwntools"
    - "requests"
    - "beautifulsoup4"
    - "scapy"
    - "cryptography"
    - "pillow"
    - "numpy"
    - "pandas"
    - "matplotlib"
    - "jupyter"
    - "flask"
    - "django"

  zsh_plugins:
    - "zsh-autosuggestions"
    - "zsh-syntax-highlighting"
    - "powerlevel10k"

# Package categories for easy selection
categories:
  development:
    description: "Core development tools"
    default: true
  
  cli:
    description: "Modern CLI tools"
    default: true
  
  security:
    description: "Security and CTF tools"
    default: false
  
  language:
    description: "Programming languages"
    default: true
  
  terminal:
    description: "Terminal applications"
    default: true
